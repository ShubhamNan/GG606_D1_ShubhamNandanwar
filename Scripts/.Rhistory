width = 1544, height = 1080)
p<-barplot(t(as.matrix(plot_DF[, 2:5])),
beside = TRUE,
names.arg = plot_DF$State,
legend.text = TRUE,
title="Air Pollution Level in States of USA",
ylab = "Parts per Million/Billion",
xlab = "State",
col=coul)
dev.off()
plot_DF <- aggregate(DF[, c("NO2 Mean","O3 Mean","SO2 Mean","CO Mean")], list(DF$State), mean)
plot_DF <- plot_DF %>%
rename(
"State" = "Group.1")
dev.off()
coul <- brewer.pal(5, "Set2")
png(file = paste(mainDir,Results_all,"/All_State_Bar_Plot.png",sep=""),   # The directory you want to save the file in
width = 1544, height = 1080)
p<-barplot(t(as.matrix(plot_DF[, 2:5])),
beside = TRUE,
names.arg = plot_DF$State,
legend.text = TRUE,
main = "Air Pollution Level in States of USA",
ylab = "Parts per Million/Billion",
xlab = "State",
col=coul)
dev.off()
plot_DF <- aggregate(DF[, c("NO2 Mean","O3 Mean","SO2 Mean","CO Mean")], list(DF$State), mean)
plot_DF <- plot_DF %>%
rename(
"State" = "Group.1")
dev.off()
coul <- brewer.pal(5, "Set2")
png(file = paste(mainDir,Results_all,"/All_State_Bar_Plot.png",sep=""),   # The directory you want to save the file in
width = 1544, height = 1080)
p<-barplot(t(as.matrix(plot_DF[, 2:5])),
beside = TRUE,
names.arg = plot_DF$State,
legend.text = TRUE,
main = "Mean of Air Pollution Level in States of USA",
ylab = "Parts per Million/Billion",
xlab = "State",
col=coul)
dev.off()
plot_DF <- aggregate(DF[, c("NO2 Mean","O3 Mean","SO2 Mean","CO Mean")], list(DF$State), mean)
plot_DF <- plot_DF %>%
rename(
"State" = "Group.1")
dev.off()
coul <- brewer.pal(5, "Set2")
png(file = paste(mainDir,Plots_D3,"/All_State_Bar_Plot.png",sep=""),   # The directory you want to save the file in
width = 1544, height = 1080)
p<-barplot(t(as.matrix(plot_DF[, 2:5])),
beside = TRUE,
names.arg = plot_DF$State,
legend.text = TRUE,
main = "Mean of Air Pollution Level in States of USA",
ylab = "Parts per Million/Billion",
xlab = "State",
col=coul)
dev.off()
plot_DF
install.packages("papaja")
library(papaja)
install.packages("papaja")
cro(plot_DF$State, plot_DF$`NO2 Mean`)
library(expss)
install.packages("expss")
library(expss)
cro(plot_DF$State, plot_DF$`NO2 Mean`)
cro(plot_DF$State, plot_DF$`NO2 Mean`, plot_DF$`O3 Mean`, plot_DF$`SO2 Mean`, plot_DF$`CO Mean`)
install.packages("tidyr")
install.packages("tidyr")
install.packages("broom")
library(tidyr)
library(broom)
# Creating table to show mean of air pollution in each state of USA
write.table(plot_DF, file = "bush_south.txt", sep = ",", quote = FALSE, row.names = F)
# Creating table to show mean of air pollution in each state of USA
write.table(plot_DF, file = "bush_south.doc", sep = ",", quote = FALSE, row.names = F)
# Creating table to show mean of air pollution in each state of USA
apa.cor.table(plot_DF,filename = "Example2.doc",table.number = 1,show.conf.interval = F)
library(apaTables)
# Creating table to show mean of air pollution in each state of USA
apa.cor.table(plot_DF,filename = "Example2.doc",table.number = 1,show.conf.interval = F)
# Creating table to show mean of air pollution in each state of USA
apa.cor.table(plot_DF,filename = "Example1.doc",table.number = 2,show.conf.interval = F)
# Creating table to show mean of air pollution in each state of USA
apa.cor.table(plot_DF,filename = "Example2.doc",table.number = 1, title(bb) show.conf.interval = F)
# Creating table to show mean of air pollution in each state of USA
apa.cor.table(plot_DF,filename = "Example2.doc",table.number = 1, show.conf.interval = F)
apa.cor.table(NewEngland_df,filename = "Example1.doc",table.number = 1,show.conf.interval = F)
install.packages("rtf")
library(rtf)
library(rtf)
rtffile <- RTF("D:/GG606_D1/Data/Results/rtf.doc")  # this can be an .rtf or a .doc
addParagraph(rtffile, "This is the output of a regression coefficients:\n")
addTable(rtffile, alabama_agg_df))
done(rtffile)
doc <- docx()
# Add a first table : Default table
doc <- addTitle(doc, "Air Pollution in Alabama")
doc <- addFlexTable( doc, FlexTable(alabama_agg_df))
doc <- addParagraph(doc, c("", "")) # 2 line breaks
writeDoc(doc, file = "D:/GG606_D1/Data/Results/rtf.docx")
install.packages('ReporteRs')
library(ReporteRs)
library('ReporteRs')
doc <- docx()
# Add a first table : Default table
doc <- addTitle(doc, "Air Pollution in Alabama")
doc <- addFlexTable( doc, FlexTable(alabama_agg_df))
doc <- addParagraph(doc, c("", "")) # 2 line breaks
writeDoc(doc, file = "D:/GG606_D1/Data/Results/rtf.docx")
library(ReporteRs)
# Create a word document to contain R outputs
doc <- docx()
# Add a title to the document
doc <- addTitle(doc, "Simple Word document", level=1)
# Add a paragraph of text into the Word document
doc <- addParagraph(doc, "This simple Word document is created using R software and ReporteRs package. It contains just a simple text.")
# Add a sub title
doc <- addTitle(doc, "What is R language?", level = 2)
doc <- addParagraph(doc, "R is a language and environment for statistical computing and graphics. R provides a wide variety of statistical and graphical techniques, and is highly extensible.")
doc <- addTitle(doc, "What is ReporteRs", level = 2)
doc <- addParagraph(doc, "ReporteRs is a package to write and format easily a Word document from R software.")
# Write the Word document to a file
writeDoc(doc, file = "D:/GG606_D1/Data/Results/rtf.docx")
# Creating table to show mean of air pollution in each state of USA
apa.cor.table(plot_DF,filename = "/D:/GG606_D1/Data/Results/Reports_D3/Example2.doc",table.number = 1, show.conf.interval = F)
# Creating table to show mean of air pollution in each state of USA
apa.cor.table(plot_DF,filename = "D:/GG606_D1/Data/Results/Reports_D3/Example2.doc",table.number = 1, show.conf.interval = F)
# Creating correlation table for NewEngland dataframe in APA style
apa.cor.table(NewEngland_df,filename = "D:/GG606_D1/Data/Results/Reports_D3/Example1.doc",table.number = 1,show.conf.interval = F)
apa.cor.table(alabama_df_2014,filename = "D:/GG606_D1/Data/Results/Reports_D3/Example3.doc",table.number = 1,show.conf.interval = F)
alabama_agg_df
outtab <- rbind(cbind(c(c1, ""), c2), sigma, rsq, n)
colnames(alabama_agg_df) <- c("Year", "NO2 Mean", "O3 Mean", "SO2 Mean", "CO Mean")
rownames(alabama_agg_df) <- c("Intercept", "x1", "x2", "sigma", "Adj. R-Squared", "n")
rtffile <- RTF("D:/GG606_D1/Data/Results/rtf.doc")  # this can be an .rtf or a .doc
addParagraph(rtffile, "This is the output of a regression coefficients:\n")
addTable(rtffile, rownames(alabama_agg_df), alabama_agg_df)
done(rtffile)
plotdata %>%
ggplot(aes(x= Year, y = O3.Mean, fill = direction)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
theme_apa(base_size = 14) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
library(tidyverse)
plotdata %>%
ggplot(aes(x= Year, y = O3.Mean, fill = direction)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
theme_apa(base_size = 14) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
alabama_agg_df %>%
ggplot(aes(x= Year, y = O3.Mean, fill = direction)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
theme_apa(base_size = 14) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
alabama_agg_df %>%
ggplot(aes(x= Year, y = O3.Mean, fill = direction)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
alabama_agg_df %>%
ggplot(aes(x= Year, y ='O3 Mean', fill = direction)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
alabama_agg_df %>%
ggplot(aes(x= Year, y =O3 Mean, fill = direction)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
alabama_agg_df %>%
ggplot(aes(x= Year, y =`NO2.Mean`, fill = direction)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
alabama_agg_df %>%
ggplot(aes(x= Year, y =`NO2 Mean`, fill = direction)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
alabama_agg_df %>%
ggplot(aes(x= Year, y =`NO2 Mean`)) +
geom_col(position = "dodge") +
geom_errorbar(aes(ymin=mean-stderr, ymax=mean+stderr),
size=.3,    # Thinner lines
width=.2,
position=position_dodge(.9)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
labs(x="Year", y="O3 Mean (Parts per Billion)") +
scale_fill_grey(start = 0.40, end = 0.6)
alabama_agg_df %>%
gather("Type", "Value",-Year) %>%
ggplot(aes(Species, Value, fill = Type)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw()
ggplot(data=alabama_agg_df, aes(x = Year, y =`NO2.Mean`, group = 1)) +
geom_line(aes(color = "red")) +
labs(title="NO2 Emission in Alabama from 2013-2016",x="Year", y = "NO2 (Parts per Million)") +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
install.packages("jtools")
library(jtools)
ggplot(data=alabama_agg_df, aes(x = Year, y =`NO2.Mean`, group = 1)) +
geom_line(aes(color = "red")) +
labs(title="NO2 Emission in Alabama from 2013-2016",x="Year", y = "NO2 (Parts per Million)") +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
ggplot(data=alabama_agg_df, aes(x = Year, y =`NO2 Mean`, group = 1)) +
geom_line(aes(color = "red")) +
labs(title="NO2 Emission in Alabama from 2013-2016",x="Year", y = "NO2 (Parts per Million)") +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
#Saving the ggplot
ggsave(
paste(mainDir,Plots_D3,"/NO2_alabama_2013-2016.tiff",sep=""),
plot = p,device = "tiff")
p<-ggplot(data=alabama_agg_df, aes(x = Year, y =`NO2 Mean`, group = 1)) +
geom_line(aes(color = "red")) +
labs(title="NO2 Emission in Alabama from 2013-2016",x="Year", y = "NO2 (Parts per Million)") +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
#Saving the ggplot
ggsave(
paste(mainDir,Plots_D3,"/NO2_alabama_2013-2016.tiff",sep=""),
plot = p,device = "tiff")
p<-ggplot(data=alabama_agg_df, aes(x = Year, y =`NO2 Mean`, group = 1)) +
geom_line(aes(color = 'NO2')) +
labs(title="NO2 Emission in Alabama from 2013-2016",x="Year", y = "NO2 (Parts per Million)") +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
#Saving the ggplot
ggsave(
paste(mainDir,Plots_D3,"/NO2_alabama_2013-2016.tiff",sep=""),
plot = p,device = "tiff")
plot_DF <- aggregate(DF[, c("NO2 Mean","O3 Mean","SO2 Mean","CO Mean")], list(DF$State), mean)
plot_DF <- plot_DF %>%
rename(
"State" = "Group.1")
dev.off()
coul <- brewer.pal(5, "Set2")
png(file = paste(mainDir,Plots_D3,"/All_State_Bar_Plot.png",sep=""),   # The directory you want to save the file in
width = 1544, height = 1080)
p<-barplot(t(as.matrix(plot_DF[, 2:5])),
beside = TRUE,
names.arg = plot_DF$State,
legend.text = TRUE,
main = "Mean of Air Pollution Level in States of USA",
ylab = "Parts per Million/Billion",
xlab = "State",
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE,
col=coul)
dev.off()
# Creating correlation table for NewEngland dataframe in APA style
apa.cor.table(NewEngland_df,filename = "D:/GG606_D1/Data/Results/Reports_D3/Example1.doc",table.number = 1,show.conf.interval = F)
# checking the aggregation result
alabama_agg
alabama_agg_df
# Creating plots for NO2 in alabama
p<-ggplot(data=alabama_agg_df, aes(x = Year, y =`NO2 Mean`, group = 1)) +
geom_line(aes(color = 'NO2')) +
labs(title="NO2 Emission in Alabama from 2013-2016",x="Year", y = "NO2 (Parts per Million)") +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
#Saving the ggplot
ggsave(
paste(mainDir,Plots_D3,"/NO2_alabama_2013-2016.tiff",sep=""),
plot = p,device = "tiff")
multmerge = function(path){
filenames=list.files(path=path, full.names=TRUE)
print(filenames)
rbindlist(lapply(filenames, fread))
}
# folder path where all the raw data exists
path <- paste(mainDir,CleanDir,sep = "",collapse = NULL)
# Calling multimerge function and storing data in DF
DF <- multmerge(path)
p <- DF %>%
ggplot( aes(x=Month_Yr, y=`NO2 Mean`)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("NO2 Mean(Parts ber Billions)") +
theme_ipsum()
# Turn it interactive with ggplotly
p <- ggplotly(p)
p
# plotting bar graph of mean
plot_DF <- aggregate(DF[, c("NO2 Mean","O3 Mean","SO2 Mean","CO Mean")], list(DF$State), mean)
plot_DF <- plot_DF %>%
rename(
"State" = "Group.1")
dev.off()
coul <- brewer.pal(5, "Set2")
png(file = paste(mainDir,Plots_D3,"/All_State_Bar_Plot.png",sep=""),   # The directory you want to save the file in
width = 1544, height = 1080)
p<-barplot(t(as.matrix(plot_DF[, 2:5])),
beside = TRUE,
names.arg = plot_DF$State,
legend.text = TRUE,
main = "Mean of Air Pollution Level in States of USA",
ylab = "Parts per Million/Billion",
xlab = "State",
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE,
col=coul)
dev.off()
# Creating table to show mean of air pollution in each state of USA
apa.cor.table(plot_DF,filename = "D:/GG606_D1/Data/Results/Reports_D3/Example2.doc",table.number = 1, show.conf.interval = F)
p<-ggplot(NewEngland_df, aes(x = Year, y =`NO2 Mean (Parts per Million)`, group = State)) +
geom_line(aes(color = State)) +
theme_minimal()
ggsave(
paste(mainDir,Plots_D3,"/NewEngland_NO2_main_plot.tiff",sep=""),
plot = p,device = "tiff")
p<-ggplot(NewEngland_df, aes(x = Year, y =`NO2 Mean (Parts per Million)`, group = State)) +
geom_line(aes(color = State)) +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
ggsave(
paste(mainDir,Plots_D3,"/NewEngland_NO2_main_plot.tiff",sep=""),
plot = p,device = "tiff")
p<-ggplot(MiddleAtlantic_df, aes(x = Year, y =`NO2 Mean (Parts per Million)`, group = State)) +
geom_line(aes(color = State)) +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
ggsave(
paste(mainDir,Plots_D3,"/MiddleAtlantic_NO2_main_plot.tiff",sep=""),
plot = p,device = "tiff")
# # Multiple of all states line plot
p<-ggplot(MiddleAtlantic_df, aes(x = Year, y =`NO2 Mean (Parts per Million)`, group = 1)) +
geom_line(aes(color = State)) +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
ggsave(
paste(mainDir,Plots_D3,"/MiddleAtlantic_NO2_main_plot.tiff",sep=""),
plot = p,device = "tiff")
p<-ggplot(MiddleAtlantic_df, aes(x = Month_Yr, y =`NO2 Mean (Parts per Million)`, group = State)) +
geom_line(aes(color = State)) +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
ggsave(
paste(mainDir,Plots_D3,"/MiddleAtlantic_NO2_main_plot.tiff",sep=""),
plot = p,device = "tiff")
p<-ggplot(MiddleAtlantic_df, aes(x = Year, y =`NO2 Mean (Parts per Million)`, group = State)) +
geom_line(aes(color = State)) +
labs(title="NO2 Emission in MiddleAtlantic from 2013-2016",x="Year", y = "NO2 (Parts per Million)") +
theme_apa(
legend.pos = "right",
legend.use.title = FALSE,
legend.font.size = 12,
x.font.size = 12,
y.font.size = 12,
facet.title.size = 12,
remove.y.gridlines = TRUE,
remove.x.gridlines = TRUE
)
ggsave(
paste(mainDir,Plots_D3,"/MiddleAtlantic_NO2_main_plot.tiff",sep=""),
plot = p,device = "tiff")
# checking the result
alabama_agg_df
# Creating a table of ANOVA using apa table and exporting in word
apa.aov.table(lm(CO Mean~Year,alabama_df_2014),filename = "Example4.doc",table.number = 1)
# Creating a table of ANOVA using apa table and exporting in word
apa.aov.table(lm(CO.Mean~Year,alabama_df_2014),filename = "Example4.doc",table.number = 1)
# Creating a table of ANOVA using apa table and exporting in word
apa.aov.table(lm(CO.Mean~State,NewEngland_df),filename = "Example4.doc",table.number = 1)
# Creating a table of ANOVA using apa table and exporting in word
apa.aov.table(lm(`NO2 Mean (Parts per Million`~State,NewEngland_df),filename = "Example4.doc",table.number = 1)
# Creating a table of ANOVA using apa table and exporting in word
apa.aov.table(lm(`NO2 Mean (Parts per Million)`~State,NewEngland_df),filename = "Example4.doc",table.number = 1)
# Creating a table of ANOVA using apa table and exporting in word
apa.aov.table(lm(`NO2 Mean (Parts per Million)`~State,NewEngland_df),filename = "D:/GG606_D1/Data/Results/Reports_D3/Example4.doc",table.number = 1)
